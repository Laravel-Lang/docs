<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
    SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
    title="To 15 from 14" id="upgrade-publisher-to-15-from-14">

<p>

  - [Updating Dependencies](#updating-dependencies)
  - [New constants namespace](#new-constants-namespace)
  - [New facade helper](#new-facade-helper)
  - [Using in production](#using-in-production)
</p>
  <chapter title="Updating Dependencies" id="updating_dependencies">
    <p>
      You should update the following dependency in your application's `composer.json` file:
    </p>
    <p>

      - `%package-publisher%` to `^15.0`
    </p>
    <p>
      Rename the configuration file:
    </p>
    <code-block lang="bash">
      mv config/lang-publisher.php %config-filename%
    </code-block>
    <p>
      Run the update dependency console command:
    </p>
    <code-block lang="bash">
      composer update
    </code-block>
  </chapter>
  <chapter title="New constants namespace" id="new_constants_namespace">
    <p>
      Replace the locales namespace:
    </p>
    <code-block lang="php">
      LaravelLang\Publisher\Constants\Locales
    </code-block>
    <p>
      with
    </p>
    <code-block lang="php">
      LaravelLang\Locales\Enums\Locale
    </code-block>
    <p>
      For example:
    </p>
    <code-block lang="php">
      // Before
LaravelLang\Publisher\Constants\Locales::AFRIKAANS; // af

// After
LaravelLang\Locales\Enums\Locale::Afrikaans; // af
    </code-block>
    <p>
      The name of the cases is aligned with the [PER standard](https://www.php-fig.org/per/coding-style)
      (see `enumerations` section).
    </p>
    <p>

      Also [changed](configuration.topic#aliases) `aliases` section in the configuration file.
    </p>
  </chapter>
  <chapter title="New facade helper" id="new_facade_helper">
    <p>
      Before
    </p>
    <code-block lang="php">
      use LaravelLang\Publisher\Facades\Helpers\Locales;

return Locales::available(); // array<string>
// ['en', 'fr', 'de', ...]

return Locales::getDefault(); // string
// de-DE
    </code-block>
    <p>
      After:
    </p>
    <code-block lang="php">
      use LaravelLang\Publisher\Facades\Helpers\Locales;

return Locales::available(); // array<LocaleData>
// [<object>, <object>, ...]

return Locales::getDefault(); // LocaleData
// <object>

return Locales::raw()->available(); // array<string>
// ['en', 'fr', 'de', ...]

return Locales::raw()->getDefault(); // string
// de-DE
    </code-block>
    <tip>
      `<object>` is a DTO class of `LocaleData`:
    </tip>
    <code-block lang="php">
      use LaravelLang\Locales\Data\LocaleData;

app()->setLocale('vi');

// Non aliased
LocaleData {
  +code: "de"
  +type: "Latn"
  +name: "German"
  +native: "Deutsch"
  +localized: "Tiếng Đức"
  +regional: "de_DE"
}

// Aliased
LocaleData {
  +code: "de-DE"
  +type: "Latn"
  +name: "German"
  +native: "Deutsch"
  +localized: "Tiếng Đức"
  +regional: "de_DE"
}
    </code-block>
  </chapter>
  <chapter title="Using in production" id="using_in_production">
    <p>
      If you use access to facades and locales in production, then you also need to perform the following steps:
    </p>
    <code-block lang="bash">
      composer require %package-publisher% --dev --quiet
composer require %package-locales%
    </code-block>
    <p>
      If you do not use locales in production, then just move `%package-publisher%` to the `require-dev` section and run
      the `composer update` command, or simply run the following console command:
    </p>
    <code-block lang="bash">
      composer require %package-publisher% --dev --quiet
    </code-block>
  </chapter>
</topic>
