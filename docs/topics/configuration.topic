<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
    SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
    title="Configuration" id="configuration">

    <link-summary>Detailed information on setting up packages</link-summary>
    <card-summary>Detailed information on setting up packages</card-summary>
    <web-summary>Detailed information on setting up packages</web-summary>

    <show-structure depth="2" />

    <chapter title="Publish" id="publish">
        <p>
            Optionally, you can publish the config files with:
        </p>
        <code-block lang="bash">
            php artisan vendor:publish --tag="%package-vendor-tag%"
        </code-block>
        <p>
            This command will publish the configuration files for all projects. To publish settings for specific packages, use the console commands:
        </p>
        <code-block lang="bash">
            php artisan vendor:publish --tag="%package-vendor-tag-main%"
            php artisan vendor:publish --tag="%package-vendor-tag-models%"
            php artisan vendor:publish --tag="%package-vendor-tag-routes%"
            php artisan vendor:publish --tag="%package-vendor-tag-punctuation%"
            php artisan vendor:publish --tag="%package-vendor-tag-translators%"
        </code-block>
    </chapter>

    <chapter title="Main" id="main">
        <note>
            Config filename is <code>%config-filename-main%</code>.
        </note>

        <code-block
            lang="php"
            src="https://raw.githubusercontent.com/Laravel-Lang/config/2.x/config/main.php"
            include-lines="5-"
        />

        <chapter title="Inline" id="inline">
            <p>
                The <code>inline</code> option determines what type of files to use when updating language files.
            </p>

            <list>
                <li><code>true</code> means inline files will be used.</li>
                <li><code>false</code> means that default files will be used.</li>
            </list>

            <p>
                For example, the difference between them can be seen here:
            </p>

            <code-block>
                The :attribute must be accepted. // default
                This field must be accepted. // inline
            </code-block>
        </chapter>

        <chapter title="Alignment" id="alignment">
            <p>
                The <code>align</code> option defines the alignment of values relative
                to each other when processing localization files.
            </p>

            <p>
                When updating files, all comments from the final files are automatically deleted.
                Unfortunately, <a href="https://www.php.net/manual/en/function.var-export.php">var_export</a>
                does not know how to work with comments.
            </p>
            <p>
                Your file example:
            </p>
            <code-block lang="php" src="configuration-alignment-auth-before.php" include-lines="3-" />
            <p>
                An updated file like this:
            </p>
            <code-block lang="php" src="configuration-alignment-auth-after.php" include-lines="3-" />
            <p>
                and example of <code>validation.php</code> file:
            </p>
            <code-block
                lang="php"
                src="configuration-alignment-validation-before.php"
                include-lines="3-"
                collapsed-title="Show content"
                collapsible="true"
            />
            <p>
                This is what it will look like after the update:
            </p>
            <code-block lang="php" src="configuration-alignment-validation-after.php" include-lines="3-" />
        </chapter>

        <chapter title="Aliases" id="aliases">
            <p>
                If you want to name codes differently, such as <code>de-DE</code> instead of <code>de</code> or
                <code>de-CH</code> instead of <code>de_CH</code>, you can define
                <code>aliases</code> in the <a href="configuration.topic#aliases">configuration file</a>.
            </p>
            <p>
                After that, all adding, updating, and deleting actions will automatically use the specified aliases in
                the <code>%config-filename-main%</code> config file:
            </p>

            <code-block lang="php" src="usage-aliases.php" include-lines="3-" />

            <p>
                If the
                <code>%config-filename-main%</code> file already exists, then you can add the aliases key in it and specify the
                desired
                <code>aliases</code> using a data array.
            </p>
            <p>
                After this, you can, for example, add new localizations by specifying both the main code and its alias:
            </p>

            <code-block lang="bash">
            %command-add% de de_CH
        </code-block>

            <p>
                Installed locales will use the specified aliases as folder names for PHP translations and file names for
                JSON translations:
            </p>

            <code-block lang="plain text">
                lang
                de-CH
                de-DE
            </code-block>
        </chapter>
    </chapter>

    <chapter title="Smart Punctuation" id="smart_punctuation">
        <note>
            Config filename is <code>%config-filename-punctuation%</code>.
        </note>

        <code-block
            lang="php"
            src="https://raw.githubusercontent.com/Laravel-Lang/config/2.x/config/punctuation.php"
            include-lines="5-"
        />

        <p>
            When updating translation keys, you can also enable intelligent converts ASCII quotes, dashes,
            and ellipses to their Unicode.
        </p>

        <p>
            For example:
        </p>

        <code-block lang="json" src="smart-punctuation-before.json" />

        <p>
            Will result in files:
        </p>

        <code-block lang="json" src="smart-punctuation-after.json" />

        <p>
            You can also set different rules for any localization.
        </p>
        <p>
            By default, conversion is disabled.
        </p>
    </chapter>

    <chapter title="Routes" id="routes">
        <note>
            Config filename is <code>%config-filename-routes%</code>.
        </note>

        <code-block
            lang="php"
            src="https://raw.githubusercontent.com/Laravel-Lang/config/2.x/config/routes.php"
            include-lines="5-"
        />

        <p>
            When using the package to work with
            <a href="packages-routes.topic">routing</a>
            , you can override the default values of key names.
        </p>
    </chapter>

    <chapter title="Models" id="models">
        <note>
            Config filename is <code>%config-filename-models%</code>.
        </note>

        <code-block
            lang="php"
            src="https://raw.githubusercontent.com/Laravel-Lang/config/2.x/config/models.php"
            include-lines="5-"
        />

        <p>
            You can define default parameter values when using the
            <a href="packages-models.topic">%repository-title-models%</a> package.
        </p>

        <p>
            The <code>suffix</code> parameter is used to specify
            the suffix of the models to which the translation repository belongs.
        </p>
        <p>
            For example:
        </p>

        <code-block>
            App\Models\Post::class
            App\Models\PostTranslation::class
        </code-block>
    </chapter>

    <chapter title="Translators" id="translators">
        <note>
            Config filename is <code>%config-filename-translators%</code>.
        </note>

        <code-block
            lang="php"
            src="https://raw.githubusercontent.com/Laravel-Lang/config/2.x/config/translators.php"
            include-lines="5-"
        />

        <p>
            Here you can not only activate default translators, but also create your own.
            You can read more about this on the
            <a href="packages-translator.topic">%repository-title-translator%</a> package information page.
        </p>
    </chapter>
</topic>
