<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
    SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
    title="Contributing" id="contributing">

    <p>
        Contributions are
        <format style="bold">welcome</format>
        and will be fully
        <format style="bold">credited</format>
        .
    </p>
    <p>
        We accept contributions through Pull Requests on
        <a href="https://github.com/orgs/Laravel-Lang/repositories">all projects</a>
        of our organization.
    </p>
    <chapter title="How can I add localization?" id="how_can_i_add_localization">
        <list>
            <li>
                Fork the desired repository (
                <a href="https://github.com/Laravel-Lang/lang">Lang</a>,
                <a href="https://github.com/Laravel-Lang/attributes">Attributes</a>
                or
                <a href="https://github.com/Laravel-Lang/http-statuses">HTTP Statuses</a>
                );
            </li>
            <li>
                Make sure you have <a href="https://www.php.net">PHP 8.1</a> or higher installed on your computer;
            </li>
            <li>
                Install dependencies by running console command:
                <include from="snippets-library-commands.topic" element-id="composer_update" />
            </li>
            <li>
                Call the console command, passing in the argument the name of the localization to be added.
                Localization code must comply
                with <a href="https://laravel.com/docs/localization">ISO-15897</a>
                and <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> (ex:
                <code>fr</code> for French):
                <code-block lang="bash">
                    vendor/bin/lang create fr
                </code-block>
            </li>
            <li>
                This command will create all the necessary files and fill them with initial data.
                The files will be located in the <code>locales/{locale}</code> directory;
            </li>
            <li>
                Keep in mind that the <code>*-inline.json</code> files does not come with Laravel and the idea of this
                file is not to put a specific name to each attribute (as in <code>validation.php</code>)
                but a generic name for the validation attributes. Therefore in the translations of this file the
                placeholder <code>:attribute</code>
                <format style="bold">should not</format>
                appear.
            </li>
            <li>
                <p>
                    Add a pull request with the name of the language. For example:
                </p>
                <tip>
                    [fr]: Added new localization
                </tip>
            </li>
        </list>
    </chapter>
    <chapter title="How can I fix the file?" id="how_can_i_fix_the_file_">
        <list>
            <li>
                Fork the desired repository (
                <a href="https://github.com/Laravel-Lang/lang">Lang</a>,
                <a href="https://github.com/Laravel-Lang/attributes">Attributes</a>
                or
                <a href="https://github.com/Laravel-Lang/http-statuses">HTTP Statuses</a>
                );
            </li>
            <li>
                <p>
                    Update the files;
                </p>
                <tip>
                    <p>
                        Note that in inline files (<code>json-inline.json</code> and <code>php-inline.json</code>),
                        keys are the "non-inline" option.
                    </p>
                    <p>
                        For example:
                    </p>
                    <code-block lang="json" validate="true">
                        {
                        "The :attribute must be at least :length characters.": "This field must be at least :length characters."
                        }
                    </code-block>
                </tip>
            </li>
            <li>
                <p>
                    Add a pull request with the name of the language
                </p>
                <tip>
                    ex: [fr]: Updated translations
                </tip>
            </li>
        </list>
    </chapter>
    <chapter
        title="What is the difference between 'inline' files and 'non-inline' files?"
        id="what_is_the_difference_between_inline_files_and_non_inline_files">
        <list>
            <li>
                <format style="bold">php.json</format>
                - contains translations of values for PHP localization files.
            </li>
            <li>
                <format style="bold">php-inline.json</format>
                - contains inline translations of values for PHP localization files.
            </li>
            <li>
                <format style="bold">json.json</format>
                - contains translations of values for JSON localization files.
            </li>
            <li>
                <format style="bold">json-inline.json</format>
                - contains inline translations of values for JSON localization files.
            </li>
        </list>
        <p>
            At the same time, the Laravel Framework itself also contains JSON keys:
        </p>
        <list>
            <li>
                <a href="https://github.com/laravel/framework/blob/082345d76fc6a55b649572efe10b11b03e279d24/src/Illuminate/Auth/Notifications/VerifyEmail.php#L65-L68">
                    laravel/framework/src/Illuminate/Auth/Notifications/VerifyEmail.php
                </a>
            </li>
            <li>
                <a href="https://github.com/Laravel-Lang/lang/blob/979db1554ad5708e5d4fc8a48d6312fbd6cfa03e/source/framework/10.x/framework.json">
                    Laravel-Lang/lang/source/framework/10.x/framework.json
                </a>
            </li>
        </list>
        <p>
            At the same time, the project structure is not tied to specific packages or files. For example,
            the <a href="https://github.com/Laravel-Lang/http-statuses">Laravel-Lang/http-statuses</a>
            project contains translations of statuses, while
            <a href="https://github.com/Laravel-Lang/attributes">Laravel-Lang/attributes</a>
            contains attributes for validation files.
        </p>
        <p>
            Using the
            <a href="https://github.com/Laravel-Lang/translations-template">template</a>, you can create any project with any
            translation keys.
        </p>
        <p>
            This file structure allows you to support translation for several product versions at once.
            For example,
            <a href="https://github.com/Laravel-Lang/lang/tree/main/source/jetstream">Jetstream</a> 1.x, 2.x, 3.x and dev
            versions.
        </p>
    </chapter>
    <chapter
        title="What should I do if there is a tag whose translation is the same as in English?"
        id="what_should_i_do_if_there_is_a_tag_whose_translation_is_the_same_as_in_english_">
        <p>
            In some languages there are some strings whose translation is the same as in English. In this case, the script that
            generates the <a href="statuses.topic">status</a> adds them by default to the
            list of pending translations. This affects the *completion status* for this language which would never be marked in
            <format style="italic">status list</format>
            with (✔) but with (❗) even if all other strings were translated.
        </p>
        <p>
            We can avoid this situation in the following way:
        </p>
        <list>
            <li>
                Fork this repository if you haven't already;
            </li>
            <li>
                Create a <code>_excludes.json</code> file in the localization folder if it doesn't already exist;
            </li>
            <li>
                <p>
                    This file contains an array of values for each exception.
                </p>
                <tip>
                    <p>
                        For example, we need to exclude Micronesia from the status check for Italian:
                    </p>
                    <p>
                        <format style="italic">locales/it/json.json</format>
                    </p>
                    <code-block lang="json" validate="true" src="translation-json.json" />
                    <p>
                        <format style="italic">locales/it/_excludes.json</format>
                    </p>
                    <code-block lang="json" validate="true" src="translation-excludes.json" />
                </tip>
            </li>
            <li>
                Add these changes to the pull request you will send.
            </li>
        </list>
    </chapter>
</topic>
