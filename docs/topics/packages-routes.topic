<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
    SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
    title="Routes" id="packages-routes">

    <show-structure depth="2" />

    <link-summary>Easy and fast way to localize routes</link-summary>
    <card-summary>Easy and fast way to localize routes</card-summary>
    <web-summary>Easy and fast way to localize routes</web-summary>

    <primary-label ref="stable" />
    <secondary-label ref="package-routes" />

    <chapter title="Installation" id="installation">
        <link-summary>Installation information for the %repository-title-routes% package</link-summary>

        <note>
            The compatibility table can be viewed <a href="#compatibility">here</a>.
        </note>

        <p>
            To install, run the console command:
        </p>

        <code-block lang="bash">
            %install-routes%
        </code-block>

        You can also
        <a href="configuration.topic#routes">change</a>
        the default settings by editing the <code>%config-filename%</code> file.

        <include from="library-descriptions.topic" element-id="route-caching-support" />
    </chapter>

    <chapter title="Usage" id="usage">
        <link-summary>Usage information for the %repository-title-routes% package</link-summary>

        <include from="library-models.topic" element-id="video-usage" />

        <p>
            Let's say an application has two localizations installed - French and German.
        </p>
        <p>
            The application settings will look like this:
        </p>

        <code-block lang="php" src="configuration-routes-usage-app-example.php" include-lines="5-" />

        <p>
            We have also set values for French and German:
        </p>

        <code-block lang="json" src="configuration-routes-installed-french.json" />
        <code-block lang="json" src="configuration-routes-installed-german.json" />

        <chapter title="Direct" id="direct">
            <p>
                You can use a link to the middleware without adding aliases:
            </p>

            <code-block lang="php" src="configuration-routes-setup-direct.php" include-lines="5-" />
        </chapter>

        <chapter title="Aliases" id="aliases">
            <p>
                To use middleware aliases, register them in the application:
            </p>

            <tabs>
                <tab title="Laravel 11">
                    <code-block lang="php" src="configuration-routes-setup-laravel-11.php" include-lines="5-" />
                </tab>
                <tab title="Laravel 10">
                    <code-block lang="php" src="configuration-routes-setup-laravel-10.php" include-lines="5-" />
                </tab>
            </tabs>

            <p>
                Next, you can specify aliases in the <code>middleware</code> route method:
            </p>

            <code-block lang="php" src="configuration-routes-setup-aliased.php" include-lines="5-" />
        </chapter>

        <chapter title="Via URL Parameter" id="via_url_parameter">
            <include from="library-descriptions.topic" element-id="routes-use-locale-parameter" />

            <code-block lang="php" src="configuration-routes-usage-parameter.php" include-lines="5-" />

            <p>
                If an incorrect or unset localization is transferred the page will be rendered according to
                the main localization installed in the application.
            </p>

            <chapter title="Examples" id="via_url_parameter_examples">
                <tabs>
                    <tab title="With installed">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/de/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/as/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/qwerty/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                </tabs>
            </chapter>
        </chapter>

        <chapter title="Via URL Parameter With Redirect" id="via_url_parameter_with_redirect">
            <include from="library-descriptions.topic" element-id="routes-use-locale-parameter" />

            <code-block lang="php" src="configuration-routes-usage-parameter-redirect.php" include-lines="5-" />

            <p>
                If an incorrect or unspecified localization is passed,
                the page will be redirected to the main localization.
            </p>

            <chapter title="Examples" id="via_url_parameter_redirect_examples">
                <tabs>
                    <tab title="With installed">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/some/show/bar/de
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/some/show/bar/as
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="curl">
                            ### 302 Redirect
                            Location: https://example.com/foo/fr/show
                        </code-block>
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/some/show/bar/qwerty
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="curl">
                            ### 302 Redirect
                            Location: https://example.com/foo/fr/show
                        </code-block>
                    </tab>
                    <tab title="Without parameter">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/some/show/bar/
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="curl">
                            ### 302 Redirect
                            Location: https://example.com/foo/fr/show
                        </code-block>
                    </tab>
                </tabs>
            </chapter>
        </chapter>

        <chapter title="Via Header" id="via_header">
            <tip>
                Sets the localization according to the
                <tooltip term="package-routes-parameter-name">Accept-Language</tooltip>
                header.
            </tip>

            <code-block lang="php" src="configuration-routes-usage-header.php" include-lines="5-" />

            <p>
                If an incorrect or unset localization is submitted,
                the page will be rendered according to the main localization installed in the application.
            </p>

            <chapter title="Examples" id="via_header_examples">
                <tabs>
                    <tab title="With installed">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET 'https://example.com/foo/show' \
                            --header 'Accept-Language: de'
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET 'https://example.com/foo/show' \
                            --header 'Accept-Language: as'
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET 'https://example.com/foo/show' \
                            --header 'Accept-Language: qwerty'
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                </tabs>
            </chapter>
        </chapter>

        <chapter title="Via Cookie" id="via_cookie">
            <tip>
                Sets the localization according to the
                <tooltip term="package-routes-parameter-name">Accept-Language</tooltip>
                cookie.
            </tip>

            <code-block lang="php" src="configuration-routes-usage-cookies.php" include-lines="5-" />

            <p>
                If an incorrect or unset localization is transferred
                the page will be rendered according to the main localization installed in the application.
            </p>

            <chapter title="Examples" id="via_cookies_examples">
                <tabs>
                    <tab title="With installed">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/show \
                            -b "Accept-Language=de"
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/show \
                            -b "Accept-Language=as"
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/foo/show \
                            -b "Accept-Language=qwerty"
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                </tabs>
            </chapter>
        </chapter>

        <chapter title="Via Session" id="via_session">
            <tip>
                Sets the localization according to the
                <tooltip term="package-routes-parameter-name">Accept-Language</tooltip>
                session key.
            </tip>

            <code-block lang="php" src="configuration-routes-usage-session.php" include-lines="5-" />

            <p>
                If an incorrect or unset localization is transferred
                the page will be rendered according to the main localization installed in the application.
            </p>

            <p>
                Technically, working with sessions is no different than working with cookies.
                The difference is where they are stored.
            </p>
            <p>
                You can <a href="https://laravel.com/docs/session">read</a>
                more about working with sessions in the
                <a href="https://laravel.com/docs/session">Laravel documentation</a>.
            </p>

            <chapter title="Examples" id="via_session_examples">
                <tabs>
                    <tab title="With installed">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            echo "Accept-Language=de" >> cookies.txt

                            curl -XGET https://example.com/foo/show \
                            -b cookies.txt -c cookies.txt
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            echo "Accept-Language=as" >> cookies.txt

                            curl -XGET https://example.com/foo/show \
                            -b cookies.txt -c cookies.txt
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            echo "Accept-Language=qwerty" >> cookies.txt

                            curl -XGET https://example.com/foo/show \
                            -b cookies.txt -c cookies.txt
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                    </tab>
                </tabs>
            </chapter>
        </chapter>

        <chapter title="Via Model" id="via_model">
            <tip>
                Sets the localization according to the
                <tooltip term="package-routes-parameter-name">locale</tooltip>
                column name.
            </tip>

            <code-block lang="php" src="configuration-routes-usage-column.php" include-lines="5-" />

            <p>
                This method allows you to set the locale for any authorized client.
                To do this, make sure that the model contains the
                <tooltip term="package-routes-parameter-name">"locale"</tooltip>
                attribute.
            </p>
            <p>
                If the user table does not have this column,
                add it if necessary, or create a dynamic method in the model class.
            </p>
            <p>
                For example:
            </p>

            <code-block lang="php" src="configuration-routes-model-attribute.php" include-lines="5-" />

            <p>
                Now, when the user is authorized via middleware or manually, for example, using the
                <code>Auth::login($user)</code> method, the application will return information in the language
                the user's choice.
            </p>

            <p>
                In addition, if the user is authorized with a particular guard,
                you can specify it with a colon when calling the middleware.
            </p>
            <p>
                For example:
            </p>

            <code-block lang="php" src="configuration-routes-usage-column-guard.php" include-lines="5-" />

            <p>
                To get a user instance, the middleware uses the following code:
            </p>

            <code-block
                lang="php"
                src="https://raw.githubusercontent.com/Laravel-Lang/routes/main/src/Middlewares/LocalizationByModel.php"
                include-lines="7-15,30-33,48"
            />
        </chapter>

        <chapter title="Via Localization Group" id="via_localization_group">
            <tip>
                <include
                    from="library-descriptions.topic"
                    element-id="routes-changeable-locale-parameter-prefix-redirect" />
            </tip>

            <code-block lang="php" src="configuration-routes-usage-localized-group.php" include-lines="5-" />

            <p>
                This method allows you to easily manage group prefixes using localized routes.
            </p>
            <p>
                In addition to the main middleware for this group, <code>LocalizationByParameterPrefix</code>,
                the following are also involved part:
                <code>LocalizationByCookie</code>,
                <code>LocalizationByHeader</code> and
                <code>LocalizationBySession</code> .
            </p>
            <p>
                You can use one of three interaction methods:
            </p>
            <code-block lang="php">
                use Illuminate\Support\Facades\Route;
                use LaravelLang\Routes\Facades\LocalizationRoute;

                app('router')->localizedGroup(fn () => ...)

                Route::localizedGroup(fn () => ...)

                LocalizationRoute::group(fn () => ...)
            </code-block>

            <p>
                The final application will register two types of routes - with and without the
                <code>{locale}</code> prefix. For example:
            </p>
            <table>
                <tr>
                    <td>URL</td>
                    <td>Pattern</td>
                    <td>Name</td>
                </tr>
                <tr>
                    <td>https://example.com/fr/foo/show</td>
                    <td><code>{locale}/foo/{bar}</code></td>
                    <td><code>localized.show</code></td>
                </tr>
                <tr>
                    <td>https://example.com/foo/show</td>
                    <td><code>foo/{bar}</code></td>
                    <td><code>show</code></td>
                </tr>
            </table>

            <p>
                The name prefix can be changed in the <code>routes</code> section
                of the <code>%config-filename%</code> file.
            </p>

            <note>
                <p>
                    Since version <a href="https://github.com/Laravel-Lang/routes/releases/tag/1.5.0">1.5</a>,
                    you can use the <code>localizedRoute</code> function call.
                </p>

                <code-block lang="php" src="packages-routes-auto-locale.php" include-lines="5-" />

                <p>
                    This feature has support for
                    <a href="https://laravel-idea.com/">Laravel Idea</a>, a plugin for
                    <a href="https://www.jetbrains.com/phpstorm/">PhpStorm</a>:
                </p>
                
                <img src="packages-route-idea-friendly.png" alt="routes idea-friendly"/>
            </note>

            <chapter title="Examples" id="via_localization_group_examples">
                <tabs>
                    <tab title="Default locale">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/fr/foo/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <tabs>
                            <tab title="With enabled redirect">
                                <code-block lang="curl">
                                    ### 302 Redirect
                                    Location: https://example.com/foo/show
                                </code-block>
                            </tab>
                            <tab title="With disabled redirect">
                                <code-block lang="json" src="configuration-routes-usage-french-example.json" />
                            </tab>
                        </tabs>
                    </tab>
                    <tab title="Non-default locale">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/de/foo/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="json" src="configuration-routes-usage-german-example.json" />
                    </tab>
                    <tab title="With uninstalled">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/as/foo/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="curl">
                            ### 302 Redirect
                            Location: https://example.com/foo/show
                        </code-block>
                    </tab>
                    <tab title="With unknown">
                        <p>
                            Request:
                        </p>
                        <code-block lang="bash">
                            curl -XGET https://example.com/qwerty/foo/show
                        </code-block>

                        <p>
                            Response:
                        </p>
                        <code-block lang="curl">
                            ### 302 Redirect
                            Location: https://example.com/foo/show
                        </code-block>
                    </tab>
                </tabs>
            </chapter>
        </chapter>
    </chapter>

    <chapter title="Events" id="events">
        <note>
            The event is available in the <code>%package-routes%</code> package version <code>1.1</code> and higher.
        </note>

        <p>
            When a localization parameter is passed to install it in the application, the event is invoked:
        </p>

        <code-block lang="php">
            use LaravelLang\Routes\Events\LocaleHasBeenSetEvent;

            LocaleHasBeenSetEvent::dispatch($locale);
        </code-block>

        <p>
            The <code>$locale</code> property of the event is of the
            <code>LaravelLang\Locales\Data\LocaleData</code> type.
        </p>

        <p>
            If necessary, you can listen to this event. For example:
        </p>

        <code-block lang="php" src="packages-routes-events-listen.php" include-lines="5-" />
    </chapter>

    <chapter title="Compatibility" id="compatibility">
        <link-summary>Compatibility table for the %repository-title-routes% package</link-summary>

        <table>
            <tr>
                <td>Laravel</td>
                <td>PHP</td>
                <td>Package</td>
                <td>Status</td>
            </tr>
            <tr>
                <td>10, 11, 12</td>
                <td>8.1, 8.2, 8.3, 8.4</td>
                <td><code>^1.0</code></td>
                <td><img src="%badge-supported%" alt="supported" /></td>
            </tr>
        </table>
    </chapter>
</topic>
